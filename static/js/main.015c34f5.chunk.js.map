{"version":3,"sources":["components/About.js","components/Navbar.js","components/Alert.js","components/TextForm.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["lottieAnimation","loop","autoplay","animationData","rendererSettings","About","props","className","style","borderColor","mode","color","options","height","width","Navbar","backgroundColor","to","type","id","role","onClick","toggleMode","htmlFor","Alert","fontSize","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","warningmsg","msg","TextForm1","useState","text","setText","characterCount","length","wordCount","split","filter","element","minuteCount","Math","round","Number","EPSILON","value","onChange","event","target","cols","rows","NewText","showAlert","title","newText","join","navigator","clipboard","writeText","previewNone","document","getElementById","classList","contains","remove","add","Footer","href","rel","App","setMode","setAlert","message","wmsg","setTimeout","body","exact","path","heading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.015c34f5.chunk.js","sourcesContent":["import React from 'react'\r\nimport Lottie from 'react-lottie';\r\nimport animationData from \"../lotties/40223-content-marketing.json\";\r\n\r\nconst lottieAnimation = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n    }\r\n};\r\n\r\nexport default function About(props) {\r\n    // let myStyle = {\r\n    //     color: props.mode === 'dark' ? 'white' : 'black',\r\n    //     backgroundColor: props.mode === 'dark' ? '#01012F' : 'white',\r\n    //     border: '1px solid',\r\n    //     borderColor: props.mode === 'dark' ? 'white' : 'black',\r\n    // }\r\n\r\n\r\n    return (\r\n        <div className=\"container myContainer\" >\r\n            <div className=\"box\" style={{ borderColor: props.mode === 'dark' ? 'rgba(128, 128, 128, 0.274)' : 'white' }}>\r\n                <h2 className=\"my-2 aboutHeading\">About Convert<span style={{ color: \"red\" }}>Txt</span></h2>\r\n                <div className=\"aboutBox\">\r\n                    <div className=\"aboutText\">\r\n                        <h5>Analyze Your Text</h5>\r\n                        <p>ConvertTxt gives you a way to analyze your text quickly and effectively. Be it word count, character count or providing the average reading time.</p>\r\n                        <h5>Free To Use</h5>\r\n                        <p>ConvertTxt is a free character tool that provides instant character count & word count statistics for a given text. It reports the number of words and characters. Thus it is suitable for writing text with word/character limit.</p>\r\n                        <h5>Browser Compatibale</h5>\r\n                        <p>This word counter software works in any browser such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in Facebook, blog, books, excel documents, pdf documents, essays, etc.</p>\r\n                    </div>\r\n                    <div>\r\n                        <Lottie options={lottieAnimation} height={300} width={280} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  //background change color picker\r\n  // const handleColorChange = ()=>{\r\n  //   let v = document.getElementById('colorpicker').value;\r\n  //   document.body.style.backgroundColor = v;\r\n  // }\r\n\r\n  // $(document).ready(function(){\r\n  //   $('ul li a').click(function(){\r\n  //     $('li a').removeClass(\"active\");\r\n  //     $(this).addClass(\"active\");\r\n  // });\r\n  // });\r\n\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode}`}\r\n        style={{ backgroundColor: props.mode === \"light\" ? \"#eee\" : \"black\" }}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            <b>\r\n              Convert<span style={{ color: \"red\" }}>Txt</span>\r\n            </b>\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  id=\"home\"\r\n                  aria-current=\"page\"\r\n                  to=\"/\"\r\n                  style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n                >\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  id=\"about\"\r\n                  to=\"/about\"\r\n                  style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n                >\r\n                  About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            {/* background chnage color picker */}\r\n            {/* <div className=\"d-flex mx-4\">\r\n            <input id=\"colorpicker\" type=\"color\" value=\"#ff0080\" onChange={handleColorChange}/>\r\n          </div> */}\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                {\"\"} Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  let alertSpace = {\r\n    width: \"290px\",\r\n    fontSize: \"14px\",\r\n  };\r\n  return (\r\n    <div style={alertSpace}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show alertPosition`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.warningmsg)}</strong>{\" \"}\r\n          {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../lotties/72342-welcome.json\";\r\n\r\nconst lottieAnimation = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {},\r\n};\r\n\r\nexport default function TextForm1(props) {\r\n    const handleUpClick = () => {\r\n        let NewText = text.toUpperCase();\r\n        setText(NewText);\r\n        if (text.length === 0) {\r\n            props.showAlert(\"Add text to Convert.\", \"danger\", \"Ooops!\");\r\n        } else {\r\n            props.showAlert(\"Converted to Uppercase.\", \"warning\", \"Woooh!\");\r\n        }\r\n    };\r\n    const handleLoClick = () => {\r\n        let NewText = text.toLowerCase();\r\n        setText(NewText);\r\n        if (text.length === 0) {\r\n            props.showAlert(\"Add text to Convert.\", \"danger\", \"Ooops!\");\r\n        } else {\r\n            props.showAlert(\"Converted to Lowercase.\", \"warning\", \"Woooh!\");\r\n        }\r\n    };\r\n    const handleClearClick = () => {\r\n        let NewText = \"\";\r\n        setText(NewText);\r\n        if (text.length === 0) {\r\n            props.showAlert(\"Add text to Clear.\", \"danger\", \"Ooops!\");\r\n        } else {\r\n            props.showAlert(\"All Text Cleared.\", \"warning\", \"Woooh!\");\r\n        }\r\n    };\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text);\r\n        if (text.length === 0) {\r\n            props.showAlert(\"Add text to Copy.\", \"danger\", \"Ooops!\");\r\n        } else {\r\n            props.showAlert(\"All Text Copuied To Clipboard.\", \"warning\", \"Woooh!\");\r\n        }\r\n    };\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        if (text.length === 0) {\r\n            props.showAlert(\"Add text to Reamove Extra Spaces.\", \"danger\", \"Ooops!\");\r\n        } else {\r\n            props.showAlert(\"All Extra Spaces Cleared.\", \"warning\", \"Woooh!\");\r\n        }\r\n    };\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const previewControl = () => {\r\n        let previewNone = document.getElementById(\"previewPara\");\r\n        if (previewNone.classList.contains(\"previewDisplay\")) {\r\n            previewNone.classList.remove(\"previewDisplay\");\r\n            document.getElementById(\"eye\").classList.add(\"fa-eye\");\r\n            document.getElementById(\"eye\").classList.remove(\"fa-eye-slash\");\r\n            props.showAlert(\"Preview Mode Activated\", \"warning\", \"Wooh!\");\r\n        } else {\r\n            previewNone.classList.add(\"previewDisplay\");\r\n            document.getElementById(\"eye\").classList.add(\"fa-eye-slash\");\r\n            document.getElementById(\"eye\").classList.remove(\"fa-eye\");\r\n            props.showAlert(\"Preview Mode Deactivated\", \"danger\", \"Ooops!\");\r\n        }\r\n    };\r\n\r\n    const [text, setText] = useState(\"\");\r\n    let characterCount = text.length;\r\n    let wordCount = text.split(/\\s+/).filter((element) => {\r\n        return element.length !== 0;\r\n    }).length;\r\n    let minuteCount =\r\n        Math.round((wordCount * 0.008 + Number.EPSILON) * 100) / 100 + \" Minutes\";\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div\r\n                className=\"container box\"\r\n                style={{\r\n                    borderColor:\r\n                        props.mode === \"dark\" ? \"rgba(128, 128, 128, 0.274)\" : \"white\",\r\n                }}\r\n            >\r\n                <div className=\"bodyArea\">\r\n                    <div className=\"bodyTextBox\">\r\n                        <div className=\"headerCountBox\">\r\n                            <div className=\"headerBox\">\r\n                                <p className=\"headerHeading\">words</p>\r\n                                <p className=\"headerCount\">{wordCount}</p>\r\n                            </div>\r\n                            <div className=\"headerBox\">\r\n                                <p className=\"headerHeading\">characters</p>\r\n                                <p className=\"headerCount\">{characterCount}</p>\r\n                            </div>\r\n                            <div className=\"headerBox\">\r\n                                <p className=\"headerHeading\">Read Time</p>\r\n                                <p className=\"headerCount\">{minuteCount}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <textarea\r\n                                className=\"form-control bodyTextArea\"\r\n                                value={text}\r\n                                onChange={handleOnChange}\r\n                                style={{\r\n                                    backgroundColor: props.mode === \"dark\" ? \"black\" : \"white\",\r\n                                    color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n                                }}\r\n                                id=\"myBox\"\r\n                                cols=\"70\"\r\n                                rows=\"10\"\r\n                            ></textarea>\r\n                        </div>\r\n                        <div className=\"bodyBtnBox\">\r\n                            <button\r\n                                className=\"btn mx-2 my-2 myBtn\"\r\n                                onClick={handleUpClick}\r\n                                title=\"Convert to UPPERCASE\"\r\n                            >\r\n                                Uppercase\r\n                            </button>\r\n                            <button\r\n                                className=\"btn myBtn mx-2 my-2\"\r\n                                onClick={handleLoClick}\r\n                                title=\"Convert to lowercase\"\r\n                            >\r\n                                Lowercase\r\n                            </button>\r\n                            <button\r\n                                className=\"btn myBtn mx-2 my-2\"\r\n                                onClick={handleExtraSpaces}\r\n                                title=\"Remove Extra Spaces\"\r\n                            >\r\n                                Extra Spaces\r\n                            </button>\r\n                            <button\r\n                                className=\"btn myBtn mx-2 my-2\"\r\n                                onClick={handleClearClick}\r\n                                title=\"Clear Text\"\r\n                            >\r\n                                <i className=\"fas fa-broom\"></i>\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn myBtn mx-2 my-2\"\r\n                                onClick={handleCopy}\r\n                                title=\"Copy to Clipboard\"\r\n                            >\r\n                                <i className=\"fas fa-copy\"></i>\r\n                            </button>\r\n                            {/* preview eye */}\r\n                            <button\r\n                                className=\"btn btn-danger mx-2 my-2\"\r\n                                onClick={previewControl}\r\n                                title=\"Preview Mode\"\r\n                                id=\"preview\"\r\n                            >\r\n                                <i className=\"fas fa-eye-slash\" id=\"eye\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"welcomeBox\">\r\n                        <div className=\"welcomeText\">\r\n                            <h2>\r\n                                Welcome To Convert<span style={{ color: \"red\" }}>Txt</span>\r\n                            </h2>\r\n                        </div>\r\n                        <p className=\"headingTxt\">\r\n                            You can paste your text here and convert it into <b>UPPERCASE</b>,{\" \"}\r\n                            <b>lowercase</b>, <b>remove extra spaces</b> and much more.\r\n                        </p>\r\n                        <div id=\"lottie\" className=\"lottie\">\r\n                            <Lottie options={lottieAnimation} height={250} width={330} className=\"lottieSize\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"previewPara\" className=\"previewDisplay previewText mt-4\">\r\n                    <p>{characterCount > 0 ? text : \"No preview available\"}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"authorBox\">\r\n             <p className=\"author\">\r\n                        Developed By:{\" \"}\r\n                        <a\r\n                            href=\"https://github.com/akashmuni\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            style={{ color: \"#ECA72F\" }}\r\n                        >\r\n                            Akash Muni\r\n                        </a>\r\n                    </p>\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\r\n\r\nimport About from \"./components/About\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport React, { useState } from \"react\";\r\nimport Alert from \"./components/Alert\";\r\nimport TextForm from \"./components/TextForm\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n  const showAlert = (message, type, wmsg) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n      warningmsg: wmsg,\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#01012f\";\r\n      document.body.style.color = \"white\";\r\n      showAlert(\"Dark mode has been enabled.\", \"warning\", \"Woooh!\");\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      document.body.style.color = \"black\";\r\n      showAlert(\"Light mode has been enabled.\", \"warning\", \"Woooh!\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Navbar title=\"ConvertTxt\" mode={mode} toggleMode={toggleMode} />\r\n        <Alert alert={alert} />\r\n        <div className=\"container my-3\">\r\n          <Routes>\r\n            <Route exact path=\"/about\" element={<About mode={mode} />} />\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              element={\r\n                <TextForm\r\n                  mode={mode}\r\n                  showAlert={showAlert}\r\n                  heading=\"You can paste you text here and convert it into UPPERCASE, lowercase, remove extra spaces and much more.\"\r\n                />\r\n              }\r\n            />\r\n          </Routes>\r\n        </div>\r\n        <Footer/>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}